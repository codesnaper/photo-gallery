#org: codesnaper
app: gallery-api
service: gallery-api
frameworkVersion: '3'

custom:
  galleryTable: 'gallery-table-${sls:stage}'
  shareTable: 'share-table-${sls:stage}'
  groupTable: 'group-table-${sls:stage}'
  s3:
    host: localhost
    directory: /tmp
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true
      convertEmptyValues: true
    migration:
      dir: dest/migrations

package:
  individually: true

provider:
  name: aws
  runtime: nodejs14.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ UsersTable, Arn ]
  environment:
    GALLERY_TABLE: ${self:custom.galleryTable}
    SHARE_TABLE: ${self:custom.shareTable}
    GROUP_TABLE: ${self:custom.groupTable}

functions:
  gallery:
    handler: src/gallery/controller.handler
    events:
      - httpApi:
          method: '*'
          path: /gallery/{param*}
  share:
    handler: src/share/controller.handler
    events:
      - httpApi:
          method: '*'
          path: /share/{param*}
  group:
    handler: src/group/controller.handler
    events:
      - httpApi:
          method: '*'
          path: /group/{param*}
  media:
    handler: src/media/controller.handler
    events:
      - httpApi:
          method: '*'
          path: /media/{param*}
  user:
    handler: src/user/controller.handler
    events:
      - httpApi:
          method: '*'
          path: /user/{param*}

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.galleryTable}
    ShareTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.shareTable}
    GroupTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.groupTable}
    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: local-bucket

plugins:
  - serverless-offline
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-s3-local